"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema Configuration:
    """
    Configuration describes an Dapr configuration setting.

    Attributes
    ----------
    apiVersion : str, default is "dapr.io/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "Configuration", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DaprIoV1alpha1ConfigurationSpec, default is Undefined, optional
        spec
    """


    apiVersion: "dapr.io/v1alpha1" = "dapr.io/v1alpha1"

    kind: "Configuration" = "Configuration"

    metadata?: v1.ObjectMeta

    spec?: DaprIoV1alpha1ConfigurationSpec


schema DaprIoV1alpha1ConfigurationSpec:
    """
    ConfigurationSpec is the spec for an configuration.

    Attributes
    ----------
    accessControl : DaprIoV1alpha1ConfigurationSpecAccessControl, default is Undefined, optional
        access control
    api : DaprIoV1alpha1ConfigurationSpecAPI, default is Undefined, optional
        api
    appHttpPipeline : DaprIoV1alpha1ConfigurationSpecAppHTTPPipeline, default is Undefined, optional
        app Http pipeline
    components : DaprIoV1alpha1ConfigurationSpecComponents, default is Undefined, optional
        components
    features : [DaprIoV1alpha1ConfigurationSpecFeaturesItems0], default is Undefined, optional
        features
    httpPipeline : DaprIoV1alpha1ConfigurationSpecHTTPPipeline, default is Undefined, optional
        http pipeline
    logging : DaprIoV1alpha1ConfigurationSpecLogging, default is Undefined, optional
        logging
    metric : DaprIoV1alpha1ConfigurationSpecMetric, default is Undefined, optional
        metric
    metrics : DaprIoV1alpha1ConfigurationSpecMetrics, default is Undefined, optional
        metrics
    mtls : DaprIoV1alpha1ConfigurationSpecMtls, default is Undefined, optional
        mtls
    nameResolution : DaprIoV1alpha1ConfigurationSpecNameResolution, default is Undefined, optional
        name resolution
    secrets : DaprIoV1alpha1ConfigurationSpecSecrets, default is Undefined, optional
        secrets
    tracing : DaprIoV1alpha1ConfigurationSpecTracing, default is Undefined, optional
        tracing
    """


    accessControl?: DaprIoV1alpha1ConfigurationSpecAccessControl

    api?: DaprIoV1alpha1ConfigurationSpecAPI

    appHttpPipeline?: DaprIoV1alpha1ConfigurationSpecAppHTTPPipeline

    components?: DaprIoV1alpha1ConfigurationSpecComponents

    features?: [DaprIoV1alpha1ConfigurationSpecFeaturesItems0]

    httpPipeline?: DaprIoV1alpha1ConfigurationSpecHTTPPipeline

    logging?: DaprIoV1alpha1ConfigurationSpecLogging

    metric?: DaprIoV1alpha1ConfigurationSpecMetric

    metrics?: DaprIoV1alpha1ConfigurationSpecMetrics

    mtls?: DaprIoV1alpha1ConfigurationSpecMtls

    nameResolution?: DaprIoV1alpha1ConfigurationSpecNameResolution

    secrets?: DaprIoV1alpha1ConfigurationSpecSecrets

    tracing?: DaprIoV1alpha1ConfigurationSpecTracing


schema DaprIoV1alpha1ConfigurationSpecAPI:
    """
    APISpec describes the configuration for Dapr APIs.

    Attributes
    ----------
    allowed : [DaprIoV1alpha1ConfigurationSpecAPIAllowedItems0], default is Undefined, optional
        List of allowed APIs. Can be used in conjunction with denied.
    denied : [DaprIoV1alpha1ConfigurationSpecAPIDeniedItems0], default is Undefined, optional
        List of denied APIs. Can be used in conjunction with allowed.
    """


    allowed?: [DaprIoV1alpha1ConfigurationSpecAPIAllowedItems0]

    denied?: [DaprIoV1alpha1ConfigurationSpecAPIDeniedItems0]


schema DaprIoV1alpha1ConfigurationSpecAPIAllowedItems0:
    """
    APIAccessRule describes an access rule for allowing or denying a Dapr API.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    $protocol : str, default is Undefined, optional
        protocol
    version : str, default is Undefined, required
        version
    """


    name: str

    $protocol?: str

    version: str


schema DaprIoV1alpha1ConfigurationSpecAPIDeniedItems0:
    """
    APIAccessRule describes an access rule for allowing or denying a Dapr API.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    $protocol : str, default is Undefined, optional
        protocol
    version : str, default is Undefined, required
        version
    """


    name: str

    $protocol?: str

    version: str


schema DaprIoV1alpha1ConfigurationSpecAccessControl:
    """
    AccessControlSpec is the spec object in ConfigurationSpec.

    Attributes
    ----------
    defaultAction : str, default is Undefined, optional
        default action
    policies : [DaprIoV1alpha1ConfigurationSpecAccessControlPoliciesItems0], default is Undefined, optional
        policies
    trustDomain : str, default is Undefined, optional
        trust domain
    """


    defaultAction?: str

    policies?: [DaprIoV1alpha1ConfigurationSpecAccessControlPoliciesItems0]

    trustDomain?: str


schema DaprIoV1alpha1ConfigurationSpecAccessControlPoliciesItems0:
    """
    AppPolicySpec defines the policy data structure for each app.

    Attributes
    ----------
    appId : str, default is Undefined, required
        app Id
    defaultAction : str, default is Undefined, optional
        default action
    namespace : str, default is Undefined, optional
        namespace
    operations : [DaprIoV1alpha1ConfigurationSpecAccessControlPoliciesItems0OperationsItems0], default is Undefined, optional
        operations
    trustDomain : str, default is Undefined, optional
        trust domain
    """


    appId: str

    defaultAction?: str

    namespace?: str

    operations?: [DaprIoV1alpha1ConfigurationSpecAccessControlPoliciesItems0OperationsItems0]

    trustDomain?: str


schema DaprIoV1alpha1ConfigurationSpecAccessControlPoliciesItems0OperationsItems0:
    """
    AppOperationAction defines the data structure for each app operation.

    Attributes
    ----------
    action : str, default is Undefined, required
        action
    httpVerb : [str], default is Undefined, optional
        http verb
    name : str, default is Undefined, required
        name
    """


    action: str

    httpVerb?: [str]

    name: str


schema DaprIoV1alpha1ConfigurationSpecAppHTTPPipeline:
    """
    PipelineSpec defines the middleware pipeline.

    Attributes
    ----------
    handlers : [DaprIoV1alpha1ConfigurationSpecAppHTTPPipelineHandlersItems0], default is Undefined, required
        handlers
    """


    handlers: [DaprIoV1alpha1ConfigurationSpecAppHTTPPipelineHandlersItems0]


schema DaprIoV1alpha1ConfigurationSpecAppHTTPPipelineHandlersItems0:
    """
    HandlerSpec defines a request handlers.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    selector : DaprIoV1alpha1ConfigurationSpecAppHTTPPipelineHandlersItems0Selector, default is Undefined, optional
        selector
    $type : str, default is Undefined, required
        type
    """


    name: str

    selector?: DaprIoV1alpha1ConfigurationSpecAppHTTPPipelineHandlersItems0Selector

    $type: str


schema DaprIoV1alpha1ConfigurationSpecAppHTTPPipelineHandlersItems0Selector:
    """
    SelectorSpec selects target services to which the handler is to be applied.

    Attributes
    ----------
    fields : [DaprIoV1alpha1ConfigurationSpecAppHTTPPipelineHandlersItems0SelectorFieldsItems0], default is Undefined, required
        fields
    """


    fields: [DaprIoV1alpha1ConfigurationSpecAppHTTPPipelineHandlersItems0SelectorFieldsItems0]


schema DaprIoV1alpha1ConfigurationSpecAppHTTPPipelineHandlersItems0SelectorFieldsItems0:
    """
    SelectorField defines a selector fields.

    Attributes
    ----------
    field : str, default is Undefined, required
        field
    value : str, default is Undefined, required
        value
    """


    field: str

    value: str


schema DaprIoV1alpha1ConfigurationSpecComponents:
    """
    ComponentsSpec describes the configuration for Dapr components

    Attributes
    ----------
    deny : [str], default is Undefined, optional
        Denylist of component types that cannot be instantiated
    """


    deny?: [str]


schema DaprIoV1alpha1ConfigurationSpecFeaturesItems0:
    """
    FeatureSpec defines the features that are enabled/disabled.

    Attributes
    ----------
    enabled : bool, default is Undefined, required
        enabled
    name : str, default is Undefined, required
        name
    """


    enabled: bool

    name: str


schema DaprIoV1alpha1ConfigurationSpecHTTPPipeline:
    """
    PipelineSpec defines the middleware pipeline.

    Attributes
    ----------
    handlers : [DaprIoV1alpha1ConfigurationSpecHTTPPipelineHandlersItems0], default is Undefined, required
        handlers
    """


    handlers: [DaprIoV1alpha1ConfigurationSpecHTTPPipelineHandlersItems0]


schema DaprIoV1alpha1ConfigurationSpecHTTPPipelineHandlersItems0:
    """
    HandlerSpec defines a request handlers.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    selector : DaprIoV1alpha1ConfigurationSpecHTTPPipelineHandlersItems0Selector, default is Undefined, optional
        selector
    $type : str, default is Undefined, required
        type
    """


    name: str

    selector?: DaprIoV1alpha1ConfigurationSpecHTTPPipelineHandlersItems0Selector

    $type: str


schema DaprIoV1alpha1ConfigurationSpecHTTPPipelineHandlersItems0Selector:
    """
    SelectorSpec selects target services to which the handler is to be applied.

    Attributes
    ----------
    fields : [DaprIoV1alpha1ConfigurationSpecHTTPPipelineHandlersItems0SelectorFieldsItems0], default is Undefined, required
        fields
    """


    fields: [DaprIoV1alpha1ConfigurationSpecHTTPPipelineHandlersItems0SelectorFieldsItems0]


schema DaprIoV1alpha1ConfigurationSpecHTTPPipelineHandlersItems0SelectorFieldsItems0:
    """
    SelectorField defines a selector fields.

    Attributes
    ----------
    field : str, default is Undefined, required
        field
    value : str, default is Undefined, required
        value
    """


    field: str

    value: str


schema DaprIoV1alpha1ConfigurationSpecLogging:
    """
    LoggingSpec defines the configuration for logging.

    Attributes
    ----------
    apiLogging : DaprIoV1alpha1ConfigurationSpecLoggingAPILogging, default is Undefined, optional
        api logging
    """


    apiLogging?: DaprIoV1alpha1ConfigurationSpecLoggingAPILogging


schema DaprIoV1alpha1ConfigurationSpecLoggingAPILogging:
    """
    Configure API logging.

    Attributes
    ----------
    enabled : bool, default is Undefined, optional
        Default value for enabling API logging. Sidecars can always override this by setting `--enable-api-logging` to true or false explicitly. The default value is false.
    obfuscateURLs : bool, default is Undefined, optional
        When enabled, obfuscates the values of URLs in HTTP API logs, logging the route name rather than the full path being invoked, which could contain PII. Default: false. This option has no effect if API logging is disabled.
    omitHealthChecks : bool, default is Undefined, optional
        If true, health checks are not reported in API logs. Default: false. This option has no effect if API logging is disabled.
    """


    enabled?: bool

    obfuscateURLs?: bool

    omitHealthChecks?: bool


schema DaprIoV1alpha1ConfigurationSpecMetric:
    """
    MetricSpec defines metrics configuration.

    Attributes
    ----------
    enabled : bool, default is Undefined, required
        enabled
    rules : [DaprIoV1alpha1ConfigurationSpecMetricRulesItems0], default is Undefined, optional
        rules
    """


    enabled: bool

    rules?: [DaprIoV1alpha1ConfigurationSpecMetricRulesItems0]


schema DaprIoV1alpha1ConfigurationSpecMetricRulesItems0:
    """
    MetricsRule defines configuration options for a metric.

    Attributes
    ----------
    labels : [DaprIoV1alpha1ConfigurationSpecMetricRulesItems0LabelsItems0], default is Undefined, required
        labels
    name : str, default is Undefined, required
        name
    """


    labels: [DaprIoV1alpha1ConfigurationSpecMetricRulesItems0LabelsItems0]

    name: str


schema DaprIoV1alpha1ConfigurationSpecMetricRulesItems0LabelsItems0:
    """
    MetricsLabel defines an object that allows to set regex expressions for a label.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    regex : {str:str}, default is Undefined, required
        regex
    """


    name: str

    regex: {str:str}


schema DaprIoV1alpha1ConfigurationSpecMetrics:
    """
    MetricSpec defines metrics configuration.

    Attributes
    ----------
    enabled : bool, default is Undefined, required
        enabled
    rules : [DaprIoV1alpha1ConfigurationSpecMetricsRulesItems0], default is Undefined, optional
        rules
    """


    enabled: bool

    rules?: [DaprIoV1alpha1ConfigurationSpecMetricsRulesItems0]


schema DaprIoV1alpha1ConfigurationSpecMetricsRulesItems0:
    """
    MetricsRule defines configuration options for a metric.

    Attributes
    ----------
    labels : [DaprIoV1alpha1ConfigurationSpecMetricsRulesItems0LabelsItems0], default is Undefined, required
        labels
    name : str, default is Undefined, required
        name
    """


    labels: [DaprIoV1alpha1ConfigurationSpecMetricsRulesItems0LabelsItems0]

    name: str


schema DaprIoV1alpha1ConfigurationSpecMetricsRulesItems0LabelsItems0:
    """
    MetricsLabel defines an object that allows to set regex expressions for a label.

    Attributes
    ----------
    name : str, default is Undefined, required
        name
    regex : {str:str}, default is Undefined, required
        regex
    """


    name: str

    regex: {str:str}


schema DaprIoV1alpha1ConfigurationSpecMtls:
    """
    MTLSSpec defines mTLS configuration.

    Attributes
    ----------
    allowedClockSkew : str, default is Undefined, optional
        allowed clock skew
    enabled : bool, default is Undefined, required
        enabled
    workloadCertTTL : str, default is Undefined, optional
        workload cert TTL
    """


    allowedClockSkew?: str

    enabled: bool

    workloadCertTTL?: str


schema DaprIoV1alpha1ConfigurationSpecNameResolution:
    """
    NameResolutionSpec is the spec for name resolution configuration.

    Attributes
    ----------
    component : str, default is Undefined, required
        component
    configuration : any, default is Undefined, required
        DynamicValue is a dynamic value struct for the component.metadata pair value.
    version : str, default is Undefined, required
        version
    """


    component: str

    configuration: any

    version: str


schema DaprIoV1alpha1ConfigurationSpecSecrets:
    """
    SecretsSpec is the spec for secrets configuration.

    Attributes
    ----------
    scopes : [DaprIoV1alpha1ConfigurationSpecSecretsScopesItems0], default is Undefined, required
        scopes
    """


    scopes: [DaprIoV1alpha1ConfigurationSpecSecretsScopesItems0]


schema DaprIoV1alpha1ConfigurationSpecSecretsScopesItems0:
    """
    SecretsScope defines the scope for secrets.

    Attributes
    ----------
    allowedSecrets : [str], default is Undefined, optional
        allowed secrets
    defaultAccess : str, default is Undefined, optional
        default access
    deniedSecrets : [str], default is Undefined, optional
        denied secrets
    storeName : str, default is Undefined, required
        store name
    """


    allowedSecrets?: [str]

    defaultAccess?: str

    deniedSecrets?: [str]

    storeName: str


schema DaprIoV1alpha1ConfigurationSpecTracing:
    """
    TracingSpec defines distributed tracing configuration.

    Attributes
    ----------
    otel : DaprIoV1alpha1ConfigurationSpecTracingOtel, default is Undefined, optional
        otel
    samplingRate : str, default is Undefined, required
        sampling rate
    stdout : bool, default is Undefined, optional
        stdout
    zipkin : DaprIoV1alpha1ConfigurationSpecTracingZipkin, default is Undefined, optional
        zipkin
    """


    otel?: DaprIoV1alpha1ConfigurationSpecTracingOtel

    samplingRate: str

    stdout?: bool

    zipkin?: DaprIoV1alpha1ConfigurationSpecTracingZipkin


schema DaprIoV1alpha1ConfigurationSpecTracingOtel:
    """
    OtelSpec defines Otel exporter configurations.

    Attributes
    ----------
    endpointAddress : str, default is Undefined, required
        endpoint address
    isSecure : bool, default is Undefined, required
        is secure
    $protocol : str, default is Undefined, required
        protocol
    """


    endpointAddress: str

    isSecure: bool

    $protocol: str


schema DaprIoV1alpha1ConfigurationSpecTracingZipkin:
    """
    ZipkinSpec defines Zipkin trace configurations.

    Attributes
    ----------
    endpointAddress : str, default is Undefined, required
        endpoint address
    """


    endpointAddress: str


